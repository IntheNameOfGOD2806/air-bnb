"use client";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.scss";
import GlobalThemeProvider from "@/theme/global.theme";
import { StoreProvider } from "@/app/StoreProvider";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
import { PersistGate } from "redux-persist/integration/react";
import { ToastContainer } from "react-toastify";
import { persistor } from "@/lib/configStore";
import { AuthContextProvider } from "@/context/AuthContext";
import { useEffect } from "react";
import { getStorage } from "@/lib/storage/storage";
import { STORAGE } from "@/lib/storage/storage";
import { useAppDispatch } from "@/lib/hooks";
import { setUserInfo } from "@/lib/features/auth/authSlice";
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <AuthContextProvider>
          {/* <PersistGate loading={null} persistor={persistor}> */}
            <StoreProvider>
              <GlobalThemeProvider>{children}</GlobalThemeProvider>
              <ToastContainer />
            </StoreProvider>
          {/* </PersistGate> */}
        </AuthContextProvider>
      </body>
    </html>
  );
}
