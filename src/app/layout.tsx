"use client";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.scss";
import GlobalThemeProvider from "@/theme/global.theme";
import { StoreProvider } from "@/app/StoreProvider";
import Script from "next/script";
const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});
import { Analytics } from "@vercel/analytics/next";
// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-expect-error
import TawkMessengerReact from "@tawk.to/tawk-messenger-react";
import { PersistGate } from "redux-persist/integration/react";
import { ToastContainer } from "react-toastify";
import { persistor } from "@/lib/configStore";
import { AuthContextProvider } from "@/context/AuthContext";
import { useEffect } from "react";
import { getStorage } from "@/lib/storage/storage";
import { STORAGE } from "@/lib/storage/storage";
import { useAppDispatch } from "@/lib/hooks";
import { setUserInfo } from "@/lib/features/auth/authSlice";
import { CometChatProvider } from "./CometChat/context/CometChatContext";
const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        <link
          href="https://api.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.css"
          rel="stylesheet"
          precedence="default"
        />
        <link
          rel="stylesheet"
          href="https://api.mapbox.com/mapbox-gl-js/plugins/mapbox-gl-geocoder/v4.7.2/mapbox-gl-geocoder.css"
          type="text/css"
          precedence="default"
        />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable}`}>
        <Analytics />
        <AuthContextProvider>
          {/* <CometChatProvider> */}
            {/* <PersistGate loading={null} persistor={persistor}> */}
            <StoreProvider>
              <GlobalThemeProvider>{children}</GlobalThemeProvider>
              <ToastContainer />
            </StoreProvider>
          {/* </CometChatProvider> */}
          {/* </PersistGate> */}
        </AuthContextProvider>
        <div>
          <TawkMessengerReact
            propertyId="682ad6ec6392a3190c780686"
            widgetId="1irjlf3do"
          />
        </div>
      </body>
    </html>
  );
}
